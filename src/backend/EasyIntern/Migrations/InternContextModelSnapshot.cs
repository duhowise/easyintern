// <auto-generated />
using System;
using EasyIntern.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyIntern.Migrations
{
    [DbContext(typeof(InternContext))]
    partial class InternContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EasyIntern.Model.Intern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("Id");

                    b.ToTable("Interns");
                });

            modelBuilder.Entity("EasyIntern.Model.Internship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternId")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("PositionId");

                    b.ToTable("Internships");
                });

            modelBuilder.Entity("EasyIntern.Model.InternshipAdvertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyLogo")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InternshipId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("Quota")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InternshipId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("PositionId");

                    b.ToTable("InternshipAdvertisements");
                });

            modelBuilder.Entity("EasyIntern.Model.InternshipApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternId")
                        .HasColumnType("int");

                    b.Property<int>("InternshipAdvertisementId")
                        .HasColumnType("int");

                    b.Property<int?>("InternshipId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.HasIndex("InternshipAdvertisementId");

                    b.HasIndex("InternshipId");

                    b.ToTable("InternshipApplications");
                });

            modelBuilder.Entity("EasyIntern.Model.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("EmployeeSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("Id");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("EasyIntern.Model.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("Id");

                    b.ToTable("InternshipPositions");
                });

            modelBuilder.Entity("EasyIntern.Model.Internship", b =>
                {
                    b.HasOne("EasyIntern.Model.Intern", "Intern")
                        .WithMany()
                        .HasForeignKey("InternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyIntern.Model.Organisation", "Organisation")
                        .WithMany("Internships")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyIntern.Model.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intern");

                    b.Navigation("Organisation");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("EasyIntern.Model.InternshipAdvertisement", b =>
                {
                    b.HasOne("EasyIntern.Model.Internship", "Internship")
                        .WithMany()
                        .HasForeignKey("InternshipId");

                    b.HasOne("EasyIntern.Model.Organisation", null)
                        .WithMany("InternshipAdvertisements")
                        .HasForeignKey("OrganisationId");

                    b.HasOne("EasyIntern.Model.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EasyIntern.Model.InternshipPeriod", "InternshipPeriod", b1 =>
                        {
                            b1.Property<int>("InternshipAdvertisementId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Ending")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Starting")
                                .HasColumnType("datetime2");

                            b1.HasKey("InternshipAdvertisementId");

                            b1.ToTable("InternshipAdvertisements");

                            b1.WithOwner()
                                .HasForeignKey("InternshipAdvertisementId");
                        });

                    b.Navigation("Internship");

                    b.Navigation("InternshipPeriod")
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("EasyIntern.Model.InternshipApplication", b =>
                {
                    b.HasOne("EasyIntern.Model.Intern", "Intern")
                        .WithMany("InternshipApplications")
                        .HasForeignKey("InternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyIntern.Model.InternshipAdvertisement", "InternshipAdvertisement")
                        .WithMany("InternshipApplications")
                        .HasForeignKey("InternshipAdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyIntern.Model.Internship", null)
                        .WithMany("Applications")
                        .HasForeignKey("InternshipId");

                    b.Navigation("Intern");

                    b.Navigation("InternshipAdvertisement");
                });

            modelBuilder.Entity("EasyIntern.Model.Intern", b =>
                {
                    b.Navigation("InternshipApplications");
                });

            modelBuilder.Entity("EasyIntern.Model.Internship", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("EasyIntern.Model.InternshipAdvertisement", b =>
                {
                    b.Navigation("InternshipApplications");
                });

            modelBuilder.Entity("EasyIntern.Model.Organisation", b =>
                {
                    b.Navigation("InternshipAdvertisements");

                    b.Navigation("Internships");
                });
#pragma warning restore 612, 618
        }
    }
}
